thing fragment basic { message blinking ( ) } thing Blinker includes basic @c_global "
extern struct Blinker_Instance blinker_var;
IntervalTimer timer;" { internal port basic { sends blinking receives blinking } function timer_blinker ( time : UInt32 ) do 'timer.begin(&callback_blinker, ' & time & ');' end function callback_blinker ( ) @c_prototype "void callback_blinker()" do 'Blinker_send_basic_blinking(&blinker_var);' end statechart BlinkerState init Off { on entry 'pinMode(13, OUTPUT);
    				timer = IntervalTimer();' state Off { on entry do 'digitalWriteFast(13, LOW);' timer_blinker ( 500000 ) end transition blink -> On event m : basic ? blinking } state On { on entry do 'digitalWriteFast(13, HIGH);' timer_blinker ( 3500000 ) end transition blink -> Off event basic ? blinking } } } datatype Char < 1 > @type_checker "Integer" @c_type "char" @c_byte_size "1" object String @type_checker "String" @c_type "char *" @c_byte_size "2" datatype Boolean < 1 > @type_checker "Boolean" @c_type "uint8_t" @c_byte_size "1" datatype UInt8 < 1 > @type_checker "Integer" @c_type "uint8_t" @c_byte_size "1" datatype UInt16 < 2 > @type_checker "Integer" @c_type "uint16_t" @c_byte_size "2" @java_type "int" @java_primitive "true" datatype Int16 < 2 > @type_checker "Integer" @c_type "int16_t" @c_byte_size "2" datatype UInt32 < 4 > @type_checker "Integer" @c_type "uint32_t" @c_byte_size "4" datatype Integer < 2 > @type_checker "Integer" @c_type "int16_t" @c_byte_size "2" datatype Long < 4 > @type_checker "Integer" @c_type "long" @c_byte_size "4" datatype Float < 4 > @type_checker "Real" @c_type "float" @c_byte_size "4" enumeration DigitalState @c_byte_size "1" @c_type "uint8_t" { LOW @enum_val "0" HIGH @enum_val "1" } datatype Byte < 1 > @type_checker "Integer" @c_type "uint8_t" @c_byte_size "1" @java_type "byte" @java_primitive "true" @scala_type "Byte" @SenML_type "Double" enumeration DigitalState @c_type "uint8_t" @c_byte_size "1" { LOW @enum_val "0" HIGH @enum_val "1" } thing fragment TimerMsgs { message timer_start ( id : UInt8 , time : UInt32 ) @timer_start "true" message timer_cancel ( id : UInt8 ) @timer_cancel "true" message timer_timeout ( id : UInt8 ) @timeout "true" message ms25_tic ( ) @xms_tic "25" message ms500_tic ( ) @xms_tic "500" } configuration Teensy { instance blinker : Blinker }