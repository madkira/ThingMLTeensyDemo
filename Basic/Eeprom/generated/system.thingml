thing SaveTest includes Saver { required port saveact { sends writebyte } required port aquireact { sends readbyte receives byteread } statechart TestSaver init Idle { on entry do 'Serial.begin(115200);' end state Idle { on entry do 'delay(3000);' aquireact ! readbyte ( 1 ) end internal event m : aquireact ? byteread action do 'Serial.println(' & m . val & ');' saveact ! writebyte ( 1 , m . val + 1 ) end } } } thing fragment Saver { message readbyte ( id : UInt8 ) message byteread ( val : UInt8 ) message writebyte ( id : UInt8 , val : UInt8 ) message bytewrite ( ) } thing Save includes Saver { provided port Reader { sends byteread receives readbyte } provided port Writer { sends bytewrite receives writebyte } statechart EESave init Idle { state Idle { internal event m : Reader ? readbyte action Reader ! byteread ( 'EEPROM.read(' & m . id & ')' ) internal event m : Writer ? writebyte action do 'EEPROM.update(' & m . id & ',' & m . val & ');' Writer ! bytewrite ( ) end } } } datatype Char < 1 > @type_checker "Integer" @c_type "char" @c_byte_size "1" object String @type_checker "String" @c_type "char *" @c_byte_size "2" datatype Boolean < 1 > @type_checker "Boolean" @c_type "uint8_t" @c_byte_size "1" datatype UInt8 < 1 > @type_checker "Integer" @c_type "uint8_t" @c_byte_size "1" datatype UInt16 < 2 > @type_checker "Integer" @c_type "uint16_t" @c_byte_size "2" @java_type "int" @java_primitive "true" datatype Int16 < 2 > @type_checker "Integer" @c_type "int16_t" @c_byte_size "2" datatype UInt32 < 4 > @type_checker "Integer" @c_type "uint32_t" @c_byte_size "4" datatype Integer < 2 > @type_checker "Integer" @c_type "int16_t" @c_byte_size "2" datatype Long < 4 > @type_checker "Integer" @c_type "long" @c_byte_size "4" datatype Float < 4 > @type_checker "Real" @c_type "float" @c_byte_size "4" enumeration DigitalState @c_byte_size "1" @c_type "uint8_t" { LOW @enum_val "0" HIGH @enum_val "1" } datatype Byte < 1 > @type_checker "Integer" @c_type "uint8_t" @c_byte_size "1" @java_type "byte" @java_primitive "true" @scala_type "Byte" @SenML_type "Double" enumeration DigitalState @c_type "uint8_t" @c_byte_size "1" { LOW @enum_val "0" HIGH @enum_val "1" } thing fragment TimerMsgs { message timer_start ( id : UInt8 , time : UInt32 ) @timer_start "true" message timer_cancel ( id : UInt8 ) @timer_cancel "true" message timer_timeout ( id : UInt8 ) @timeout "true" message ms25_tic ( ) @xms_tic "25" message ms500_tic ( ) @xms_tic "500" } configuration SaveEssaie { instance saveTest : SaveTest instance save : Save connector saveTest . aquireact => save . Reader connector saveTest . saveact => save . Writer }